(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))e(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&e(n)}).observe(document,{childList:!0,subtree:!0});function s(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function e(i){if(i.ep)return;i.ep=!0;const r=s(i);fetch(i.href,r)}})();const U={None:1,Normal:2,Joy:3,Anger:4,Sorrow:5,Anxiety:6,Surprised:7,Doubt:8,Whistle:9,Shy:10,Success:11};class w{static P_BOX=Uint32Array.from([608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731]);static S_BOX=[Uint32Array.from([3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946]),Uint32Array.from([1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055]),Uint32Array.from([3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504]),Uint32Array.from([976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462])];p;s;key;constructor(t){const s=new DataView(t),e=Math.floor(t.byteLength/Uint32Array.BYTES_PER_ELEMENT),i=new Uint32Array(e);for(let o=0;o<e;o++)i[o]=s.getUint32(o*4,!1);this.s=[w.S_BOX[0].slice(),w.S_BOX[1].slice(),w.S_BOX[2].slice(),w.S_BOX[3].slice()],this.p=w.P_BOX.slice(),this.key=i;let r=0;for(let o=0;o<18;o++)this.p[o]^=this.key[r%this.key.length],r++;const n=new ArrayBuffer(8),a=new DataView(n);for(let o=0;o<18;o+=2)this.encrypt(n),this.p[o]=a.getUint32(0,!0),this.p[o+1]=a.getUint32(4,!0);for(let o=0;o<4;o++)for(let c=0;c<256;c+=2)this.encrypt(n),this.s[o][c]=a.getUint32(0,!0),this.s[o][c+1]=a.getUint32(4,!0)}encrypt(t){const s=new DataView(t,0,Math.floor(t.byteLength/8)*8);for(let e=0;e<Math.floor(s.byteLength/8);e++){let i=s.getUint32(e*8,!0),r=s.getUint32(e*8+4,!0);for(let n=0;n<16;n+=2)i^=this.p[n],r^=this.round(this.s,i),r^=this.p[n+1],i^=this.round(this.s,r);i^=this.p[16],r^=this.p[17],s.setUint32(e*8,r,!0),s.setUint32(e*8+4,i,!0)}return s.buffer}decrypt(t){const s=new DataView(t,0,Math.floor(t.byteLength/8)*8);for(let e=0;e<Math.floor(s.byteLength/8);e++){let i=s.getUint32(e*8,!0),r=s.getUint32(e*8+4,!0);for(let n=16;n>0;n-=2)i^=this.p[n+1],r^=this.round(this.s,i),r^=this.p[n],i^=this.round(this.s,r);i^=this.p[1],r^=this.p[0],s.setUint32(e*8,r,!0),s.setUint32(e*8+4,i,!0)}return s.buffer}round(t,s){const e=t[0][s>>>24],i=t[1][s>>>16&255],r=t[2][s>>>8&255],n=t[3][s&255];return(e+i^r)+n>>>0}}class b{buffer;dataView;pos;bitCounter;bitValue;constructor(t=new ArrayBuffer(64)){this.buffer=t,this.dataView=new DataView(this.buffer),this.pos=0,this.bitCounter=0,this.bitValue=0}getBuffer(){return this.buffer}getDataView(){return this.dataView}getPosition(){return this.pos}readBit(){this.bitCounter===0&&(this.bitValue=this.dataView.getUint8(this.pos),this.seek(1),this.bitCounter=8);const t=this.bitValue&1;return this.bitCounter-=1,this.bitValue=this.bitValue>>>1,t}readUint8(){const t=this.dataView.getUint8(this.pos);return this.seek(1),t}readUint16(t){const s=this.dataView.getUint16(this.pos,t===!0);return this.seek(2),s}readUint32(t){const s=this.dataView.getUint32(this.pos,t===!0);return this.seek(4),s}readInt8(){const t=this.dataView.getInt8(this.pos);return this.seek(1),t}readInt16(t){const s=this.dataView.getInt16(this.pos,t===!0);return this.seek(2),s}readInt32(t){const s=this.dataView.getInt32(this.pos,t===!0);return this.seek(4),s}readFloat32(t){const s=this.dataView.getFloat32(this.pos,t===!0);return this.seek(4),s}readFloat64(t){const s=this.dataView.getFloat64(this.pos,t===!0);return this.seek(8),s}writeUint8(t){this.extendIfNeeded(1),this.dataView.setUint8(this.pos,t),this.seek(1)}writeUint16(t,s){this.extendIfNeeded(2),this.dataView.setUint16(this.pos,t,s===!0),this.seek(2)}writeUint32(t,s){this.extendIfNeeded(4),this.dataView.setUint32(this.pos,t,s===!0),this.seek(4)}writeInt8(t){this.extendIfNeeded(1),this.dataView.setInt8(this.pos,t),this.seek(1)}writeInt16(t,s){this.extendIfNeeded(2),this.dataView.setInt16(this.pos,t,s===!0),this.seek(2)}writeInt32(t,s){this.extendIfNeeded(4),this.dataView.setInt32(this.pos,t,s===!0),this.seek(4)}writeFloat32(t,s){this.extendIfNeeded(4),this.dataView.setFloat32(this.pos,t,s===!0),this.seek(4)}writeFloat64(t,s){this.extendIfNeeded(8),this.dataView.setFloat64(this.pos,t,s===!0),this.seek(8)}seek(t){if(this.pos+t>this.buffer.byteLength||this.pos+t<0)throw new Error(`invalid seek to ${this.pos+t} (by ${t}) on buffer of length ${this.buffer.byteLength}`);this.pos+=t}extendIfNeeded(t){if(this.pos+t>this.buffer.byteLength){const s=new ArrayBuffer(this.buffer.byteLength*2),e=new DataView(s);for(let i=0;i<this.buffer.byteLength;i++)e.setUint8(i,this.dataView.getUint8(i));this.buffer=s,this.dataView=e}}}const m={version:"0.0.3",date:"2023-03-07T23:18:45.343Z"};class E{baseRegistry={u8:t=>t.readUint8(),u16:t=>t.readUint16(!1),u32:t=>t.readUint32(!1),u16le:t=>t.readUint16(!0),u32le:t=>t.readUint32(!0),i8:t=>t.readInt8(),i16:t=>t.readInt16(!1),i32:t=>t.readInt32(!1),i16le:t=>t.readInt16(!0),i32le:t=>t.readInt32(!0),f32:t=>t.readFloat32(!1),f64:t=>t.readFloat64(!1),f32le:t=>t.readFloat32(!0),f64le:t=>t.readFloat64(!0)};parse(t,s,e=[]){const i=new b(t),r=[this.baseRegistry].concat(e).reduce((n,a)=>Object.assign(n,a),{});return this.parseAttribute({cursor:i,schema:s,registry:r})}parseAttribute({cursor:t,schema:s,registry:e}){switch(typeof s){case"string":return this.parseAttribute({cursor:t,schema:e[s],registry:e});case"function":return s(t,e);case"object":{const i={};for(const r of Object.keys(s)){const n=s[r],a=this.parseAttribute({cursor:t,schema:n,registry:e});i[r]=a}return i}}}}class L extends E{pointSchema={x:"u8",y:"u8"};layerSchema={points:{topLeft:this.pointSchema,bottomLeft:this.pointSchema,topRight:this.pointSchema,bottomRight:this.pointSchema},props:(t,s)=>{const e=this.parseAttribute({cursor:t,schema:"u32le",registry:s}),i=this.parseAttribute({cursor:t,schema:"u32le",registry:s}),r=!(e>>31),n=e>>21&1023,a=e>>18&7,o=e>>0&63,c=e>>6&63,l=e>>12&63,p=i>>0&63,g=i>>6&63,d=i>>12&63;return{visibility:r,id:n,colorA:a,colorR:o,colorG:c,colorB:l,colorX:p,colorY:g,colorZ:d}}};parseSar(t,s){const e=this.parseAttribute({cursor:t,schema:"u32le",registry:s}),i=this.parseAttribute({cursor:t,schema:"u8",registry:s}),r=this.parseAttribute({cursor:t,schema:"u8",registry:s}),n=this.parseAttribute({cursor:t,schema:"u8",registry:s}),a=this.parseAttribute({cursor:t,schema:"u8",registry:s}),o=[];for(let d=0;d<i;d++){const h=this.parseAttribute({cursor:t,schema:this.layerSchema,registry:s});o.push({symbol:h.props.id,isVisible:h.props.visibility,position:h.points,r:h.props.colorR,g:h.props.colorG,b:h.props.colorB,a:h.props.colorA,x:h.props.colorX,y:h.props.colorY,z:h.props.colorZ})}const c=[],l=t.getPosition();for(let d=0;d<(t.getDataView().byteLength-l)/2;d++)try{const h=this.parseAttribute({cursor:t,schema:"u16le",registry:s});c.push(h)}catch{break}const p=new TextDecoder("utf-16"),g=new DataView(Uint16Array.from(c).buffer);return{authorId:e,name:p.decode(g),sound:a,size:{height:r,width:n},layers:o}}}class f{static FILE_MAGIC_NUMBER=Array.from("sar").map(t=>t.charCodeAt(0));static BLOWFISH_KEY=Uint8Array.of(9,7,193,43).buffer;static FLAG_COMPRESSED=132;static FLAG_NOT_COMPRESSED=4;browfish;decrypted;constructor(){this.browfish=new w(f.BLOWFISH_KEY),this.decrypted=new Uint8Array}get data(){const t=new Uint8Array(4);f.FILE_MAGIC_NUMBER.forEach((e,i)=>t[i]=e),t[3]=f.FLAG_NOT_COMPRESSED;const s=this.browfish.encrypt(this.decrypted);return this.appendBuffer(t,s)}set data(t){const s=new Uint8Array(t);if(s[0]!==f.FILE_MAGIC_NUMBER[0]||s[1]!==f.FILE_MAGIC_NUMBER[1]||s[2]!==f.FILE_MAGIC_NUMBER[2])throw new Error("[SymbolArt.data] not a SAR file");const e=s[3];if(e!==f.FLAG_COMPRESSED&&e!==f.FLAG_NOT_COMPRESSED)throw new Error(`[SymbolArt.data] invalid flag ${e}`);const i=s.slice(4,t.byteLength);this.decrypted=this.browfish.decrypt(i.buffer),e===f.FLAG_COMPRESSED&&(this.decrypted=this.decompress(i.map(r=>r^149).buffer))}get json(){const t=new L,s=[t.baseRegistry].concat([]).reduce((e,i)=>Object.assign(e,i),{});return t.parseSar(new b(this.decrypted),s)}set json(t){const s=t.layers.length,e=new Uint8Array(8+16*s+2*t.name.length);let i=0;e[i++]=t.authorId&255,e[i++]=t.authorId>>8&255,e[i++]=t.authorId>>16&255,e[i++]=t.authorId>>24&255,e[i++]=s&255,e[i++]=t.size.height&255,e[i++]=t.size.width&255,e[i++]=U[t.sound]||1;for(const r of t.layers)e[i++]=r.position.topLeft.x&255,e[i++]=r.position.topLeft.y&255,e[i++]=r.position.bottomLeft.x&255,e[i++]=r.position.bottomLeft.y&255,e[i++]=r.position.topRight.x&255,e[i++]=r.position.topRight.y&255,e[i++]=r.position.bottomRight.x&255,e[i++]=r.position.bottomRight.y&255,e[i++]=(r.g&3)<<6|r.r,e[i++]=(r.b&15)<<4|r.g>>2&15,e[i++]=(r.symbol&7)<<5|r.a<<2|r.b>>4&3,e[i++]=(r.isVisible?0:1)<<7|r.symbol>>3&127,e[i++]=(r.y&3)<<6|r.x,e[i++]=(r.z&15)<<4|r.y>>2&15,e[i++]=r.z>>4&3,e[i++]=0;for(let r=0;r<t.name.length;r++){const n=t.name.charCodeAt(r);e[i++]=n&255,e[i++]=n>>8&255}this.decrypted=e}decompress(t){const s=new b(t),e=new b;for(;;){let i=s.readBit();if(i){e.writeUint8(s.readUint8());continue}let r=0,n=0,a=!1;if(i=s.readBit(),i){if(a=!0,r=s.readUint16(!0),r===0)break;n=r&7,r=r>>3|-8192,n===0?n=s.readUint8()+10:n+=2}else i=s.readBit()?1:0,n=s.readBit()?1:0,n=(n|i<<1)+2,r=s.readInt8()|-256;for(let o=0;o<n;o++){if(r>0)throw new Error(`[SymbolArt.decompress] offset > 0 (${r}) (isLongCopy === ${a})`);e.seek(r);const c=e.readUint8();e.seek(-1),e.seek(-r),e.writeUint8(c)}}return e.getBuffer().slice(0,e.getPosition())}static version=m.version;static build=m.date;appendBuffer(t,s){const e=new Uint8Array(t.byteLength+s.byteLength);return e.set(new Uint8Array(t),0),e.set(new Uint8Array(s),t.byteLength),e.buffer}}const y=new f,I=document.getElementById("sarFile");document.addEventListener("DOMContentLoaded",u=>{I.addEventListener("change",t=>{t.preventDefault(),document.getElementById("output").innerHTML="Loading...";const s=new FileReader;s.readAsArrayBuffer(I.files[0]),s.onload=e=>{const i=new Uint8Array(e.target.result);try{y.data=i}catch(n){document.getElementById("output").innerHTML=n}const r=y.json;document.getElementById("output").innerHTML=JSON.stringify(r,null,2),A(r)}})});function A(u){document.getElementById("authorId").innerText=u.authorId,document.getElementById("name").innerText=u.name,document.getElementById("sound").src=`/sounds/${u.sound}.flac`,document.getElementById("layerCount").innerText=u.layers.length;const t=document.querySelector("#layers > tbody");for(;t.firstChild;)t.removeChild(t.firstChild);let s=0;u.layers.forEach(e=>{const i=document.createElement("tr"),r=document.createElement("th");r.innerHTML=s++,r.scope="row",i.appendChild(r),Object.keys(e).forEach(n=>{const a=document.createElement("td");switch(n){case"symbol":const o=e.symbol-1,c=`rgba(${e.r*4},${e.g*4},${e.b*4},${e.a/7})`,l=document.createElement("canvas");if(l.id=`layer_${s}`,l.width=64,l.height=64,l.className="img-thumbnail",l.title=o,o<720)new C({canvas:l,fileSrc:`/symbols/${o}.webp`,width:64,height:64,color:c});else{const d=new Image;d.src=`/symbols/${o}.webp`,d.onload=()=>{l.getContext("2d").drawImage(d,0,0,d.naturalWidth,d.naturalHeight)}}const p=document.createElement("input");p.type="color",p.className="form-control form-control-color",p.value=`#${(e.r*4).toString(16)}${(e.g*4).toString(16)}${(e.b*4).toString(16)}`,p.disabled="disabled",p.title=c,a.appendChild(l),a.appendChild(p);break;case"isVisible":const g=document.createElement("input");g.type="checkbox",g.disabled="disabled",g.className="form-check-input",g.checked=e.isVisible?"checked":"",a.appendChild(g);break;case"position":a.innerHTML=JSON.stringify(e[n],null,2);break}i.appendChild(a)}),t.appendChild(i)})}class C{constructor(t={}){this.canvas=t.canvas||document.createElement("div"),this.fileSrc=t.fileSrc||"",this.width=isNaN(t.width)?0:t.width,this.height=isNaN(t.height)?0:t.height,this.color=t.color||"#000",this.url=void 0,this.init()}init(){this.preloadCanvas().then(t=>{this.draw(t)})}preloadCanvas(){return new Promise((t,s)=>{const e=document.createElement("canvas");let i=new Image;i.src=this.fileSrc,i.addEventListener("load",()=>{const r=e.getContext("2d");e.width=i.naturalWidth,e.height=i.naturalHeight,r.drawImage(i,0,0,i.naturalWidth,i.naturalHeight),t(e)},!1)})}draw(t){const s=this.canvas,e=s.getContext("2d");s.width=this.width,s.height=this.height,e.fillStyle=this.color,e.fillRect(0,0,s.width,s.height),e.globalCompositeOperation="destination-in",e.drawImage(t,0,0,s.width,s.height)}}
